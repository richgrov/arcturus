rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{user} {
      allow read: if isMine();
      allow create, update: if isMine() && isValidUserDoc(request.resource.data);

      match /songs/{song} {
        // Users can read any song as long as its theirs
        allow read: if isMine();

        // Users can update any song as long as its theirs and its valid
        allow update: if isMine() && isValidSong(request.resource.data);

        // Valid song:
        // name - non-blank string
        // author - string
        function isValidSong(doc) {
          return doc.keys().hasOnly(['name', 'author']) &&
            doc.name is string && doc.name.size() > 0 &&
            doc.author is string;
        }
      }

      function isMine() {
        return request.auth != null && request.auth.uid == user;
      }

      function isValidUserDoc(doc) {
        return doc.keys().hasOnly(['queue']) &&
          doc.queue is list;
      }
    }
  }
}
